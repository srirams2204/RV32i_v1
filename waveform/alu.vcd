$date
	Mon Sep 15 09:41:17 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_tb $end
$var wire 1 ! zero $end
$var wire 1 " lt_unsigned $end
$var wire 1 # lt_signed $end
$var wire 32 $ alu_out [31:0] $end
$var reg 32 % A [31:0] $end
$var reg 32 & B [31:0] $end
$var reg 4 ' sel [3:0] $end
$scope module dut $end
$var wire 32 ( A [31:0] $end
$var wire 32 ) B [31:0] $end
$var wire 4 * sel [3:0] $end
$var wire 1 ! zero $end
$var wire 5 + shamt [4:0] $end
$var wire 1 " lt_unsigned $end
$var wire 1 # lt_signed $end
$var reg 32 , alu_out [31:0] $end
$upscope $end
$scope task show_result $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b11110 ,
b10100 +
b0 *
b10100 )
b1010 (
b0 '
b10100 &
b1010 %
b11110 $
1#
1"
0!
$end
#10000
b1 +
b10000000000000000000000000000000 $
b10000000000000000000000000000000 ,
b1 &
b1 )
0#
0"
b1111111111111111111111111111111 %
b1111111111111111111111111111111 (
#20000
b1010 +
b1010 $
b1010 ,
b1 '
b1 *
b1010 &
b1010 )
b10100 %
b10100 (
#30000
b1 +
b1111111111111111111111111111111 $
b1111111111111111111111111111111 ,
b1 &
b1 )
1#
b10000000000000000000000000000000 %
b10000000000000000000000000000000 (
#40000
b1111 +
b11111111111111111111111111111111 $
b11111111111111111111111111111111 ,
b10 '
b10 *
b1111000011110000111100001111 &
b1111000011110000111100001111 )
b11110000111100001111000011110000 %
b11110000111100001111000011110000 (
#50000
b11000 +
b10010001101000101011001111000 $
b10010001101000101011001111000 ,
b11 '
b11 *
b101011001111000 &
b101011001111000 )
0#
b10010001101000000000000000000 %
b10010001101000000000000000000 (
#60000
b11111 +
b111111110000000000000000 $
b111111110000000000000000 ,
b100 '
b100 *
b111111110000000011111111 &
b111111110000000011111111 )
1#
b11111111111111110000000000000000 %
b11111111111111110000000000000000 (
#70000
b1000 +
b100000000 $
b100000000 ,
b101 '
b101 *
b1000 &
b1000 )
1"
b1 %
b1 (
#80000
b100 +
b1000000000000000000000000000 $
b1000000000000000000000000000 ,
b110 '
b110 *
b100 &
b100 )
0"
b10000000000000000000000000000000 %
b10000000000000000000000000000000 (
#90000
b11111000000000000000000000000000 $
b11111000000000000000000000000000 ,
b111 '
b111 *
#100000
b1010 +
b1 $
b1 ,
b1000 '
b1000 *
b1010 &
b1010 )
b11111111111111111111111111111011 %
b11111111111111111111111111111011 (
#110000
b1 +
1!
b0 $
b0 ,
b1001 '
b1001 *
b1 &
b1 )
b11111111111111111111111111111111 %
b11111111111111111111111111111111 (
#120000
